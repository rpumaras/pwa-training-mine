'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.Image = exports.ImageSize = exports.CategoryID = exports.ProductID = exports.Identifier = exports.Text = exports.Money = exports.Meta = exports.Measure = exports.URL = exports.Integer = exports.Nullable = undefined;

var _isInteger = require('babel-runtime/core-js/number/is-integer');

var _isInteger2 = _interopRequireDefault(_isInteger);

var _runtypes = require('runtypes');

var Runtypes = _interopRequireWildcard(_runtypes);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var Nullable = exports.Nullable = function Nullable(type) {
    return Runtypes.Union(type, Runtypes.Null, Runtypes.Undefined);
}; /* * *  *  * *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */
/* Copyright (c) 2017 Mobify Research & Development Inc. All rights reserved. */
/* * *  *  * *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */

var Integer = exports.Integer = Runtypes.Number.withConstraint(function (n) {
    return (0, _isInteger2.default)(n);
});

var URL = exports.URL = Runtypes.String;
var Measure = exports.Measure = Runtypes.String;

// SEO Meta Data
var Meta = exports.Meta = Runtypes.Record({
    title: Runtypes.String,
    description: Runtypes.String
}).And(Runtypes.Partial({
    keywords: Runtypes.String
}));

// A monetary value, notionally with an amount and a currency.
var Money = exports.Money = Runtypes.String;

// Text for the user
var Text = exports.Text = Runtypes.String;
// Identifiers for the program
var Identifier = exports.Identifier = Runtypes.String;

var ProductID = exports.ProductID = Identifier;
var CategoryID = exports.CategoryID = Identifier;

var ImageSize = exports.ImageSize = Runtypes.Record({
    height: Measure,
    width: Measure
});

var Image = exports.Image = Runtypes.Record({
    alt: Text,
    src: URL
}).And(Runtypes.Partial({
    zoomSrc: URL,
    thumbnailSrc: URL,
    caption: Nullable(Text), // eslint-disable-line new-cap
    size: ImageSize,
    isMain: Runtypes.Boolean
}));