'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.Categories = exports.Category = exports.CategoryContents = exports.CategoryInfo = undefined;

var _runtypes = require('runtypes');

var Runtypes = _interopRequireWildcard(_runtypes);

var _types = require('../types');

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

/* * *  *  * *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */
/* Copyright (c) 2017 Mobify Research & Development Inc. All rights reserved. */
/* * *  *  * *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */

var IconID = _types.Identifier;

var CategoryInfo = exports.CategoryInfo = Runtypes.Record({
    id: _types.CategoryID,
    href: _types.URL,
    title: _types.Text,
    // Top-level categories have parentId = null
    parentId: (0, _types.Nullable)(_types.CategoryID) // eslint-disable-line new-cap
}).And(Runtypes.Partial({
    pageMeta: _types.Meta,
    icon: Runtypes.Union(IconID, _types.Image),
    description: _types.Text
}));

var CategoryContents = exports.CategoryContents = Runtypes.Record({
    itemCount: _types.Integer,
    products: Runtypes.Array(_types.ProductID)
});

var Category = exports.Category = CategoryInfo.And(CategoryContents);

var Categories = exports.Categories = Runtypes.Dictionary(Category, _types.CategoryID);