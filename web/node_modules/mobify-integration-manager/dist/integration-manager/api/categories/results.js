'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.receiveCategoryFilterOptions = exports.receiveCategorySortOptions = exports.receiveCategoryContents = exports.receiveCategoryInformation = undefined;

var _defineProperty2 = require('babel-runtime/helpers/defineProperty');

var _defineProperty3 = _interopRequireDefault(_defineProperty2);

var _reduxActions = require('redux-actions');

var _typechecking = require('progressive-web-sdk/dist/utils/typechecking');

var _types = require('../types');

var _types2 = require('./types');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/* * *  *  * *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */
/* Copyright (c) 2017 Mobify Research & Development Inc. All rights reserved. */
/* * *  *  * *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */

var receiveCategoryInformation = exports.receiveCategoryInformation = (0, _reduxActions.createAction)('Receive Category Information', function (id, info) {
    return (0, _defineProperty3.default)({}, (0, _typechecking.typecheck)(_types.CategoryID, id), (0, _typechecking.typecheck)(_types2.CategoryInfo, info));
});

var receiveCategoryContents = exports.receiveCategoryContents = (0, _reduxActions.createAction)('Receive Category Contents', function (id, contents) {
    return (0, _defineProperty3.default)({}, (0, _typechecking.typecheck)(_types.CategoryID, id), (0, _typechecking.typecheck)(_types2.CategoryContents, contents));
});

var receiveCategorySortOptions = exports.receiveCategorySortOptions = (0, _reduxActions.createAction)('Receive Category Sorting Options', function (pathKey, options) {
    return { sortOptions: (0, _defineProperty3.default)({}, pathKey, options) };
});

var receiveCategoryFilterOptions = exports.receiveCategoryFilterOptions = (0, _reduxActions.createAction)('Receive Category Filtering Options', function (pathKey, options) {
    return { filterOptions: (0, _defineProperty3.default)({}, pathKey, options) };
});