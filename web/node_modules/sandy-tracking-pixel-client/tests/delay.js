define(['chai', 'sandy'], function(chai, Sandy) {
    var assert = chai.assert;
    Sandy.endpoint = 'http://httpbin.org/delay/10';

    describe('Pixel load time', function() {
        /**

         We had previous case that our sandy sent event causes load event to be
         delayed.  This test validate against this.

         How does this test works?

         1. The main delay.html contains an image that takes 2s to load which delays
            the load event to allow test below to setup
         2. The load listener is setup in the test
         3. The endpoint (`Sandy.endpoint` above) is set to delay for 10 secs
         4. We verify that the load event still happens within 5 secs
            (done by `this.timeout below) even if the send pixel has not replied

        */
        var fakeWindow;
        var orignalXHRsend;
        beforeEach(function() {
            orignalXHRsend = window.XMLHttpRequest.send;
            window.XMLHttpRequest.prototype.send = function() {
                throw 'Do not use XHR directly - danger of getting hijaxed';
            };
            fakeWindow = {};
        });
        afterEach(function() {
            delete Sandy.trackers;
            window.XMLHttpRequest.prototype.send = orignalXHRsend;
        });
        it('should not be delayed in the throw of the data (even without body)', function(done) {
            this.timeout(5000);

            // removing body
            var originalBody = document.body;
            var originalParent = document.body.parentNode;
            originalParent.removeChild(originalBody);

            Sandy.init(fakeWindow);

            fakeWindow.sandy('create', 'sluggo', 'auto');
            fakeWindow.sandy('send', 'pageview', '/slowly/meowbifying');

            window.addEventListener('load', function() {
                originalParent.appendChild(originalBody);
                done();
            }, false);
        });
    });
});
