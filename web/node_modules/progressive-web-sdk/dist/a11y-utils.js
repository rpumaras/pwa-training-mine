'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.onKeyUpWrapper = exports.onKeyUpHelper = exports.keyMap = undefined;

var _toConsumableArray2 = require('babel-runtime/helpers/toConsumableArray');

var _toConsumableArray3 = _interopRequireDefault(_toConsumableArray2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/* * *  *  * *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */
/* Copyright (c) 2018 Mobify Research & Development Inc. All rights reserved. */
/* * *  *  * *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */

// Helper object to quickly and clearly indicate keyCodes
var keyMap = exports.keyMap = {
    // Focus
    tab: 9,
    // Navigation
    left: 37,
    up: 38,
    right: 39,
    down: 40,
    // Action
    enter: 13,
    escape: 27,
    space: 32

    // Helper method to ensure keyboard can trigger onClick event
};var onKeyUpHelper = exports.onKeyUpHelper = function onKeyUpHelper(event, onClick, keycode) {
    var otherArgs = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};

    // Default key is (space)
    if (event.keyCode === keycode || event.keyCode === keyMap.space) {
        if (typeof onClick === 'function') {
            onClick.apply(undefined, [event].concat((0, _toConsumableArray3.default)(otherArgs)));
        }
    }
};

// HOF to make using onKeyUpHelper easier
var onKeyUpWrapper = exports.onKeyUpWrapper = function onKeyUpWrapper(onClick, keycode) {
    return function (event) {
        for (var _len = arguments.length, otherArgs = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
            otherArgs[_key - 1] = arguments[_key];
        }

        return onKeyUpHelper(event, onClick, keycode, otherArgs);
    };
};