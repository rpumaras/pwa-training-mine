'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _icon = require('../icon');

var _icon2 = _interopRequireDefault(_icon);

var _cardUtils = require('../../card-utils');

var _dataObjects = require('../../analytics/data-objects/');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Card Verification Value (CVV). The number is displayed in front of the card for Amex and on the back for rest of
 * credit cards
 *
 * @example ./DESIGN.md
 */

/* * *  *  * *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */
/* Copyright (c) 2018 Mobify Research & Development Inc. All rights reserved. */
/* * *  *  * *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */

var CardVerification = function CardVerification(_ref) {
    var CVVHintAmex = _ref.CVVHintAmex,
        CVVHintDefault = _ref.CVVHintDefault,
        className = _ref.className,
        cardNumber = _ref.cardNumber,
        value = _ref.value,
        onChange = _ref.onChange,
        onBlur = _ref.onBlur;

    var cardData = (0, _cardUtils.getCardData)(cardNumber);
    var cardType = cardData.cardType;
    var cvvFormat = cardData.cvv;
    var iconName = cvvFormat.iconName;
    var displayValue = (0, _cardUtils.toDisplayValue)(value, cvvFormat);
    var classes = (0, _classnames2.default)('pw-card-verification', className);
    var iconClasses = (0, _classnames2.default)('pw-card-verification__icon', 'pw-card-verification__icon--' + iconName);

    return _react2.default.createElement(
        'div',
        { className: classes },
        _react2.default.createElement('input', {
            type: 'tel',
            onChange: (0, _cardUtils.toStoreValueDecorator)(onChange, cvvFormat),
            onBlur: (0, _cardUtils.toStoreValueDecorator)(onBlur, cvvFormat),
            value: displayValue,
            'data-analytics-name': _dataObjects.UI_NAME.cardVerification
        }),
        _react2.default.createElement(_icon2.default, {
            className: iconClasses,
            name: iconName,
            title: cardType === _cardUtils.AMERICAN_EXPRESS ? CVVHintAmex : CVVHintDefault
        })
    );
};

CardVerification.defaultProps = {
    CVVHintAmex: 'CVV number is on the front',
    CVVHintDefault: 'CVV number is on the back'
};

CardVerification.propTypes = {
    /**
     * CVV hint for American Express cards.
     */
    CVVHintAmex: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.node]),

    /**
     * CVV hint for most credit cards.
     */
    CVVHintDefault: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.node]),

    /**
     * The credit card number to determine whether it's Amex or any other card.
     */
    cardNumber: _propTypes2.default.string,

    /**
     * Adds values to the `class` attribute of the root element.
     */
    className: _propTypes2.default.string,

    /**
     * The value of CVV.
     */
    value: _propTypes2.default.string,

    /**
     * PROVIDED INTERNALLY: OnBlur callback with signature `(eventOrValue) => undefined`
     * (passed in by redux-form).
     */
    onBlur: _propTypes2.default.func,

    /**
     * PROVIDED INTERNALLY: OnChange callback with signature `(eventOrValue) => undefined`
     * (passed in by redux-form).
     */
    onChange: _propTypes2.default.func

};

exports.default = CardVerification;