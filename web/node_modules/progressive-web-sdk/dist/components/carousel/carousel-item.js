'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _link = require('../link');

var _link2 = _interopRequireDefault(_link);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Related component:
 *
 * * [Carousel](#!/Carousel)
 *
 * A single item to be displaced within the `Carousel` component.
 *
 * @example ./DESIGN.md
 */
/* * *  *  * *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */
/* Copyright (c) 2018 Mobify Research & Development Inc. All rights reserved. */
/* * *  *  * *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */

var CarouselItem = function CarouselItem(_ref) {
  var active = _ref.active,
      isAnimating = _ref.isAnimating,
      isDragging = _ref.isDragging,
      children = _ref.children,
      className = _ref.className,
      href = _ref.href,
      onClick = _ref.onClick,
      openInNewTab = _ref.openInNewTab;

  var shouldRender = active || isAnimating || isDragging;
  var Item = href ? _link2.default : 'div';
  var itemProps = {
    className: (0, _classnames2.default)('pw-carousel__item', {
      'pw--active': active
    }, className),
    'aria-hidden': active ? 'false' : 'true',
    'aria-live': active ? 'polite' : '',
    onClick: onClick
  };
  var itemVisibility = {
    display: shouldRender ? 'block' : 'none'
  };

  if (href) {
    itemProps.href = href;
    itemProps.openInNewTab = openInNewTab;
  }

  return _react2.default.createElement(
    Item,
    itemProps,
    _react2.default.createElement(
      'div',
      { style: itemVisibility },
      children
    )
  );
};

CarouselItem.propTypes = {
  /**
   * PROVIDED INTERNALLY: Defines if the item is active or not.
   */
  active: _propTypes2.default.bool,

  /**
   * A caption for the contents, to be (optionally) displayed by the carousel.
   */
  caption: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.node]),

  /**
   * The contents of the carousel item, to be shown in the carousel.
   */
  children: _propTypes2.default.node,

  /**
   * Adds values to the `class` attribute of the root element.
   */
  className: _propTypes2.default.string,

  /**
   * If specified, the component is rendered as a link, with this value set as the href.
   */
  href: _propTypes2.default.string,

  /**
   * PROVIDED INTERNALLY: Defines if the item is animating or not.
   */
  isAnimating: _propTypes2.default.bool,

  /**
   * PROVIDED INTERNALLY: Defines if the item is dragging or not.
   */
  isDragging: _propTypes2.default.bool,

  /**
   * If rendered as a link, when the CarouselItem is clicked the corresponding link opens in a new tab.
   */
  openInNewTab: _propTypes2.default.bool,

  /**
   * A callback to be called when the CarouselItem is clicked.
   */
  onClick: _propTypes2.default.func
};

exports.default = CarouselItem;