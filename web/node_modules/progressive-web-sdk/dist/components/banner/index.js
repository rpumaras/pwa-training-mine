'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _button = require('../button');

var _button2 = _interopRequireDefault(_button);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Accessible `Banner` component that includes promo and alert styles
 *
 * @example ./DESIGN.md
 */

/* * *  *  * *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */
/* Copyright (c) 2018 Mobify Research & Development Inc. All rights reserved. */
/* * *  *  * *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */

var Banner = function Banner(_ref) {
  var children = _ref.children,
      className = _ref.className,
      icon = _ref.icon,
      isAlert = _ref.isAlert,
      href = _ref.href,
      title = _ref.title,
      onClick = _ref.onClick;

  var classes = (0, _classnames2.default)('pw-banner', className, {
    'pw--alert': isAlert
  });

  return _react2.default.createElement(
    'div',
    { className: classes },
    _react2.default.createElement(
      'div',
      { className: 'pw-banner__content' },
      children
    ),
    _react2.default.createElement(
      'div',
      { className: 'pw-banner__action' },
      _react2.default.createElement(_button2.default, {
        className: 'pw-banner__button',
        href: href,
        icon: icon,
        title: title,
        onClick: onClick
      })
    )
  );
};

Banner.propTypes = {
  /**
   * Any children to be nested within this banner.
   */
  children: _propTypes2.default.node,

  /**
   * Adds values to the `class` attribute of the root element.
   */
  className: _propTypes2.default.string,

  /**
   * The intended target URL.
   */
  href: _propTypes2.default.string,

  /**
   * Includes an icon of the given name in the banner.
   * For more information about available icons, see the [Icon component](#!/Icon).
   */
  icon: _propTypes2.default.string,

  /**
   * Defines if banner is alert.
   */
  isAlert: _propTypes2.default.bool,

  /**
   * The title to be used for accessibility.
   */
  title: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.node]),

  /**
   * `onClick` handler for hooking in click events.
   */
  onClick: _propTypes2.default.func
};

exports.default = Banner;