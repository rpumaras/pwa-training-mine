'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.targetPropType = exports.default = undefined;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Skip Links are a simple technique that is used to provide a fast navigation
 * option for non-mouse users. For example, users who interact using keyboards,
 * screen readers or other assistive technologies.
 *
 * `SkipLinks` remain hidden until they are focused on by tabbing to it, etc., at
 * which point they become visible.
 *
 * @url: http://webaim.org/techniques/skipnav/
 *
 * @example ./DESIGN.md
 */

var SkipLinks = function SkipLinks(_ref) {
    var className = _ref.className,
        items = _ref.items;

    var classes = (0, _classnames2.default)('pw-skip-links', className);
    return _react2.default.createElement(
        'div',
        { className: classes },
        items.map(function (_ref2, key) {
            var target = _ref2.target,
                label = _ref2.label;
            return _react2.default.createElement(
                'a',
                { href: target, className: 'pw-skip-links__anchor', key: 'skip-link-' + target + '-' + key },
                label
            );
        })
    );
}; /* * *  *  * *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */
/* Copyright (c) 2018 Mobify Research & Development Inc. All rights reserved. */
/* * *  *  * *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */

SkipLinks.defaultProps = {
    items: []
};

var targetPropType = function targetPropType(props, propName) {
    var isAlphaNumeric = new RegExp(/^#[\w\-_]+$/).test(props[propName]);
    if (!isAlphaNumeric) {
        return new Error('SkipLinks item target is invalid. Must be an ID selector, starting with "#" followed by alphanumeric characters, dashes and underscores with no spaces.');
    }

    return true;
};

SkipLinks.propTypes = {
    /**
     * An array of items, each with a `target` and a `label`.
     */
    items: _propTypes2.default.arrayOf(_propTypes2.default.shape({
        target: targetPropType,
        label: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.node])
    })).isRequired,

    /**
     * Adds values to the `class` attribute of the root element.
     */
    className: _propTypes2.default.string
};

exports.default = SkipLinks;
exports.targetPropType = targetPropType;