'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends2 = require('babel-runtime/helpers/extends');

var _extends3 = _interopRequireDefault(_extends2);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _link = require('../link');

var _link2 = _interopRequireDefault(_link);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * `Breadcrumbs` is used to provide users a navigational path they took to get to the current page.
 *
 * @example ./DESIGN.md
 */

/* * *  *  * *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */
/* Copyright (c) 2018 Mobify Research & Development Inc. All rights reserved. */
/* * *  *  * *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */

var Breadcrumbs = function Breadcrumbs(_ref) {
    var className = _ref.className,
        items = _ref.items,
        youAreHereMessage = _ref.youAreHereMessage,
        includeMicroData = _ref.includeMicroData;

    if (!items.length) {
        return false;
    }

    var breadcrumbListMicroData = {};
    var listMicroData = {};
    var thingMicroData = {};

    if (includeMicroData) {
        breadcrumbListMicroData = {
            itemScope: true,
            itemType: 'http://schema.org/BreadcrumbList'
        };
        listMicroData = {
            itemProp: 'itemListElement',
            itemScope: true,
            itemType: 'http://schema.org/ListItem'
        };
        thingMicroData = {
            itemScope: true,
            itemProp: 'item',
            itemType: 'http://schema.org/Thing'
        };
    }

    return _react2.default.createElement(
        'nav',
        { role: 'navigation', className: (0, _classnames2.default)('pw-breadcrumbs', className) },
        _react2.default.createElement(
            'p',
            { id: 'breadcrumb__label', className: 'pw-breadcrumbs__label u-visually-hidden' },
            youAreHereMessage,
            ': ',
            items[items.length - 1].text
        ),
        _react2.default.createElement(
            'ol',
            (0, _extends3.default)({ 'aria-labelledby': 'breadcrumb__label', className: 'pw-breadcrumbs__list' }, breadcrumbListMicroData),
            items.map(function (_ref2, index) {
                var href = _ref2.href,
                    text = _ref2.text,
                    onClick = _ref2.onClick;

                var itemContent = includeMicroData ? _react2.default.createElement(
                    'span',
                    { itemProp: 'name' },
                    text,
                    ' ',
                    _react2.default.createElement('meta', { itemProp: 'url', content: href })
                ) : text;
                return _react2.default.createElement(
                    'li',
                    (0, _extends3.default)({ className: 'pw-breadcrumbs__item', key: index }, listMicroData),
                    href || onClick ? _react2.default.createElement(
                        _link2.default,
                        (0, _extends3.default)({
                            href: href,
                            className: 'pw-breadcrumbs__link',
                            onClick: onClick
                        }, thingMicroData),
                        itemContent
                    ) : _react2.default.createElement(
                        'span',
                        (0, _extends3.default)({
                            className: 'pw-breadcrumbs__non-link'
                        }, thingMicroData),
                        itemContent
                    ),
                    includeMicroData && _react2.default.createElement('meta', { itemProp: 'position', content: index + 1 })
                );
            })
        )
    );
};

Breadcrumbs.defaultProps = {
    items: [],
    youAreHereMessage: 'You are here'
};

Breadcrumbs.propTypes = {
    /**
     * The list of breadcrumbs.
     * Each breadcrumb item should be an object (More info on items prop below).
     */
    items: _propTypes2.default.arrayOf(_propTypes2.default.shape({
        text: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.node]).required,
        href: _propTypes2.default.string,
        onClick: _propTypes2.default.func
    })).isRequired,

    /**
     * Adds values to the `class` attribute of the root element.
     */
    className: _propTypes2.default.string,

    /**
     * Indicates if SEO microdata should be included in the breadcrumb element
     * https://developers.google.com/search/docs/data-types/breadcrumbs
     * https://www.w3.org/TR/microdata/
     */
    includeMicroData: _propTypes2.default.bool,

    /**
     * This component has a visually hidden label to make it more accessible to screen readers.
     * You can change this property to change the label's content.
     */
    youAreHereMessage: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.node])
};

exports.default = Breadcrumbs;