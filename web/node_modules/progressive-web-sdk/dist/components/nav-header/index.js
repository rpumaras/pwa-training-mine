'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends2 = require('babel-runtime/helpers/extends');

var _extends3 = _interopRequireDefault(_extends2);

var _defineProperty2 = require('babel-runtime/helpers/defineProperty');

var _defineProperty3 = _interopRequireDefault(_defineProperty2);

var _keys = require('babel-runtime/core-js/object/keys');

var _keys2 = _interopRequireDefault(_keys);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _TransitionGroup = require('react-transition-group/TransitionGroup');

var _TransitionGroup2 = _interopRequireDefault(_TransitionGroup);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _navSlider = require('../nav-slider');

var _navSlider2 = _interopRequireDefault(_navSlider);

var _nav = require('../nav');

var _nav2 = _interopRequireDefault(_nav);

var _utils = require('../../utils/utils');

var _a11yUtils = require('../../a11y-utils');

var _navHeaderDefaultContent = require('./nav-header-default-content');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Related components:
 *
 * * [Nav](#!/Nav)
 * * [NavHeader](#!/NavHeader)
 * * [NavItem](#!/NavItem)
 * * [NavMenu](#!/NavMenu)
 * * [NavSlider](#!/NavSlider)
 *
 * The `NavHeader` component is responsible for rendering a "header bar" inside a
 * `Nav` component, automatically displaying meta information about the
 * navigation tree such as which navigation node is presently active, as well
 * as displaying UI that can be, for example, used to navigate the tree
 * backwards, or to display buttons that can be used to close a navigation
 * modal.
 *
 * `NavHeader` cannot be used by itself. It must be inserted into a `Nav`
 * component.
 *
 * @example ./DESIGN.md
 */
var NavHeader = function NavHeader(props, context) {
    var goBack = context.goBack,
        expanded = context.expanded,
        expandedPath = context.expandedPath;
    var startContent = props.startContent,
        endContent = props.endContent,
        onClose = props.onClose,
        className = props.className,
        animationProperties = props.animationProperties,
        onTitleClick = props.onTitleClick;

    var classes = (0, _classnames2.default)('pw-nav-header', className);
    var sliderClasses = (0, _classnames2.default)('pw-nav-header__slider', (0, _defineProperty3.default)({
        'pw--has-custom-header-animation': (0, _keys2.default)(animationProperties).length > 0
    }, animationProperties.className, animationProperties.className));
    var atRoot = expandedPath === '/';

    var onBackClick = function onBackClick(e) {
        e.preventDefault();
        goBack();
    };

    var onCloseClick = function onCloseClick(e) {
        e.preventDefault();
        onClose();
    };

    var start = _react2.default.isValidElement(startContent) ? _react2.default.cloneElement(startContent, { atRoot: atRoot, onClick: onBackClick }) : startContent;

    var end = _react2.default.isValidElement(endContent) ? _react2.default.cloneElement(endContent, { onClick: onCloseClick }) : endContent;

    var titleProps = { className: 'pw-nav-header__title' };

    if (onTitleClick) {
        var wrapTitleClick = function wrapTitleClick() {
            return onTitleClick(expanded.title, expanded.path);
        };

        titleProps = (0, _extends3.default)(titleProps, {
            onClick: wrapTitleClick,
            onKeyUp: (0, _a11yUtils.onKeyUpWrapper)(wrapTitleClick),
            role: 'button',
            tabIndex: '0'
        });
    }

    return _react2.default.createElement(
        'div',
        { className: classes },
        _react2.default.createElement(
            'div',
            { className: 'pw-nav-header__actions-start' },
            start
        ),
        _react2.default.createElement(
            _TransitionGroup2.default,
            {
                component: 'div',
                className: 'pw-nav-header__slider-container'
            },
            _react2.default.createElement(
                _navSlider2.default,
                (0, _extends3.default)({}, animationProperties, {
                    className: sliderClasses,
                    key: expandedPath
                }),
                _react2.default.createElement(
                    'span',
                    titleProps,
                    expanded && expanded.title || ''
                )
            )
        ),
        _react2.default.createElement(
            'div',
            { className: 'pw-nav-header__actions-end' },
            end
        )
    );
}; /* * *  *  * *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */
/* Copyright (c) 2018 Mobify Research & Development Inc. All rights reserved. */
/* * *  *  * *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */

NavHeader.defaultProps = {
    onClose: _utils.noop,
    startContent: _react2.default.createElement(_navHeaderDefaultContent.DefaultStartContent, null),
    animationProperties: {},
    endContent: _react2.default.createElement(_navHeaderDefaultContent.DefaultEndContent, null)
};

NavHeader.propTypes = {
    /**
     * Animation properties for customizing the NavHeader's animation.
     * These properties are passed down to the internal NavSlider
     * component as props.
     */
    animationProperties: _propTypes2.default.shape({
        /**
         * Adds values to the `class` attribute to the
         * internal NavSlider.
         */
        className: _propTypes2.default.string,
        /**
         * Duration of the animation in millis.
         */
        duration: _propTypes2.default.number,
        /**
         * Easing function for the animation.
         */
        easing: _propTypes2.default.string,
        /**
         * Id given to the internal NavSlider.
         */
        id: _propTypes2.default.string
    }),

    /**
     * Adds values to the `class` attribute of the root element.
     */
    className: _propTypes2.default.string,

    /**
     * Overrides the content displayed at the end of the header.
     * Defaults to a 'close' button.
     */
    endContent: _propTypes2.default.oneOfType([_propTypes2.default.element, _propTypes2.default.string]),

    /**
     * Overrides the content displayed at the start of the header.
     * Defaults to a 'back' button.
     */
    startContent: _propTypes2.default.oneOfType([_propTypes2.default.element, _propTypes2.default.string]),

    /**
     * A callback invoked when the default close button is pressed.
     */
    onClose: _propTypes2.default.func,

    /**
     * A callback invoked when the title is clicked.
     */
    onTitleClick: _propTypes2.default.func
};

NavHeader.contextTypes = _nav2.default.childContextTypes;

exports.default = NavHeader;