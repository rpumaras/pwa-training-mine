'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * An inline loader component with accessible title for screen readers. Can customize
 * the number of loading dots and animation offset between dots.
 *
 * @example ./DESIGN.md
 */

var InlineLoader = function InlineLoader(_ref) {
    var animationDelayOffset = _ref.animationDelayOffset,
        className = _ref.className,
        dotCount = _ref.dotCount,
        title = _ref.title;

    var classes = (0, _classnames2.default)('pw-inline-loader', className);

    var animationDelay = 0;

    // Generate loading dots
    var loadingDots = [];
    for (var i = 0; i < dotCount; i++) {
        loadingDots.push(_react2.default.createElement('div', {
            key: i,
            className: 'pw-inline-loader__loading-dot',
            role: 'presentation',
            style: {
                animationDelay: animationDelay + 's'
            }
        }));

        // Calculate delay offset for next iteration
        animationDelay += animationDelayOffset;
    }

    return _react2.default.createElement(
        'div',
        { className: classes },
        _react2.default.createElement(
            'span',
            { className: 'u-visually-hidden' },
            title
        ),
        loadingDots
    );
}; /* * *  *  * *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */
/* Copyright (c) 2018 Mobify Research & Development Inc. All rights reserved. */
/* * *  *  * *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */

InlineLoader.defaultProps = {
    animationDelayOffset: 0.2,
    dotCount: 3,
    title: 'Loading'
};

InlineLoader.propTypes = {
    /**
     * Amount of time before the next loading dot animates in. Time unit is in seconds.
     */
    animationDelayOffset: _propTypes2.default.number,

    /**
     * Adds values to the `class` attribute of the root element.
     */
    className: _propTypes2.default.string,

    /**
     * The amount of loading dots.
     */
    dotCount: _propTypes2.default.number,

    /**
     * Screen reader text to indicate loading state.
     */
    title: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.node])
};

exports.default = InlineLoader;