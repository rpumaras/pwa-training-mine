'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _icon = require('../icon');

var _icon2 = _interopRequireDefault(_icon);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Accessible feedback component that includes error and success styles
 *
 * @example ./DESIGN.md
 */

/* * *  *  * *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */
/* Copyright (c) 2018 Mobify Research & Development Inc. All rights reserved. */
/* * *  *  * *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */

var Feedback = function Feedback(_ref) {
    var className = _ref.className,
        icon = _ref.icon,
        text = _ref.text,
        title = _ref.title,
        isBlock = _ref.isBlock,
        isError = _ref.isError,
        isSuccess = _ref.isSuccess;

    var classes = (0, _classnames2.default)('pw-feedback', {
        'pw--error': isError,
        'pw--success': isSuccess,
        'pw--block': isBlock
    }, className);
    var feedbackIcon = void 0;

    if (!icon) {
        // These are default icons for success and error if user doesn't provide any icon for them
        if (isSuccess) {
            feedbackIcon = 'check';
        } else if (isError) {
            feedbackIcon = 'warning';
        }
    } else {
        // Use user input icon
        feedbackIcon = icon;
    }

    return _react2.default.createElement(
        'div',
        { className: classes },
        feedbackIcon && _react2.default.createElement(_icon2.default, {
            className: 'pw-feedback__icon',
            name: feedbackIcon,
            title: title
        }),
        _react2.default.createElement(
            'div',
            { className: 'pw-feedback__content' },
            text
        )
    );
};

Feedback.propTypes = {
    /**
     * Text for the feedback.
     */
    text: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.node]).isRequired,

    /**
     * Adds values to the `class` attribute of the root element.
     */
    className: _propTypes2.default.string,

    /**
     * Includes an icon of the given name in the feedback.
     * For more information about available icons, see the [Icon component](#!/Icon).
     */
    icon: _propTypes2.default.string,

    /**
     * Defines if feedback is a block element.
     */
    isBlock: _propTypes2.default.bool,

    /**
     * Defines if feedback is error.
     */
    isError: _propTypes2.default.bool,

    /**
     * Defines if feedback is success.
     */
    isSuccess: _propTypes2.default.bool,

    /**
     * The title to be used for accessibility.
     */
    title: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.node])
};

exports.default = Feedback;