'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _icon = require('../icon');

var _icon2 = _interopRequireDefault(_icon);

var _image = require('../image');

var _image2 = _interopRequireDefault(_image);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Rating is used to display an average user satisfaction level of a product, it
 * is the summary of the ratings given by users in the product reviews section.
 *
 * @example ./DESIGN.md
 */

var RatingIcon = function RatingIcon(_ref) {
    var name = _ref.name,
        src = _ref.src,
        modifierClass = _ref.modifierClass;

    var iconClasses = (0, _classnames2.default)('pw-rating__icon', modifierClass);

    return _react2.default.createElement(
        'div',
        { className: iconClasses },
        src ? _react2.default.createElement(_image2.default, { role: 'presentation', src: src }) : _react2.default.createElement(_icon2.default, { name: name })
    );
}; /* * *  *  * *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */
/* Copyright (c) 2018 Mobify Research & Development Inc. All rights reserved. */
/* * *  *  * *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */

RatingIcon.propTypes = {
    /**
     * PROVIDED INTERNALLY: The addtional classes to be used for the RatingIcon div
     */
    modifierClass: _propTypes2.default.string,
    /**
     * PROVIDED INTERNALLY: The name of the icon to be used
     */
    name: _propTypes2.default.string,
    /**
     * PROVIDED INTERNALLY: The URL of the image to be used. Icon is used otherwise.
     */
    src: _propTypes2.default.string
};

RatingIcon.displayName = 'RatingIcon';

/**
 * Commonly used to display user satisfaction of products or services.
 */
var Rating = function Rating(_ref2) {
    var className = _ref2.className,
        count = _ref2.count,
        total = _ref2.total,
        name = _ref2.name,
        src = _ref2.src;

    var ratingPercentage = count / total * 100;
    var classes = (0, _classnames2.default)('pw-rating', className);

    return _react2.default.createElement(
        'div',
        { className: classes },
        _react2.default.createElement(
            'div',
            { className: 'pw-rating__label' },
            'Rating is ',
            count,
            ' out of ',
            total
        ),
        _react2.default.createElement(
            'div',
            {
                className: 'pw-rating__icon-wrapper',
                role: 'presentation',
                'aria-hidden': 'true'
            },
            _react2.default.createElement(
                'div',
                {
                    className: 'pw-rating__filled-icons',
                    style: { width: ratingPercentage + '%' }
                },
                Array(total).fill().map(function (item, i) {
                    return _react2.default.createElement(RatingIcon, {
                        key: i,
                        name: name,
                        src: src,
                        modifierClass: 'pw--filled'
                    });
                })
            ),
            Array(total).fill().map(function (item, i) {
                return _react2.default.createElement(RatingIcon, { key: i, name: name, src: src });
            })
        )
    );
};

Rating.defaultProps = {
    count: 0,
    total: 5,
    name: 'star'
};

Rating.propTypes = {
    /**
     * Adds values to the `class` attribute of the root element.
     */
    className: _propTypes2.default.string,

    /**
     * The number of filled stars to render (can be a fraction).
     */
    count: _propTypes2.default.number,

    /**
     * Name of the SVG sprite you want to use for the rating star.
     * Not used if the src prop is set.
     */
    name: _propTypes2.default.string,

    /**
     * URL for the image icon to use for the rating star.
     * If not provided, the SVG icon described by the `name` prop is used.
     */
    src: _propTypes2.default.string,

    /**
     * The total number of stars to render.
     */
    total: _propTypes2.default.number
};

exports.default = Rating;