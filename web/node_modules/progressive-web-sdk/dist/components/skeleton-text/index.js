'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _skeletonInline = require('../skeleton-inline');

var _skeletonInline2 = _interopRequireDefault(_skeletonInline);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Related components:
 *
 * * [SkeletonBlock](#!/SkeletonBlock)
 * * [SkeletonInline](#!/SkeletonInline)
 *
 * A skeleton component that mimics lines of text on a page. Internally, it uses `<SkeletonInline />`.
 *
 * @example ./DESIGN.md
 */
/* * *  *  * *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */
/* Copyright (c) 2018 Mobify Research & Development Inc. All rights reserved. */
/* * *  *  * *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */

var SkeletonText = function SkeletonText(props) {
    var classes = (0, _classnames2.default)('pw-skeleton-text', props.className);
    var lineClasses = (0, _classnames2.default)('pw-skeleton-text__line', props.lineClassName);

    var attributes = {
        role: 'presentation',
        className: classes,
        style: props.style
    };

    var skeletons = [];
    for (var i = 0; i < props.lines; i++) {
        skeletons.push(_react2.default.createElement(_skeletonInline2.default, {
            key: i,
            type: 'div',
            size: props.size,
            width: props.width,
            className: lineClasses }));
    }

    return _react2.default.createElement(props.type, attributes, skeletons);
};

SkeletonText.defaultProps = {
    lines: 1,
    style: {},
    type: 'span'
};

SkeletonText.propTypes = {
    /**
    * Adds values to the `class` attribute of the root element.
    */
    className: _propTypes2.default.string,

    /**
    * Adds values to the `class` attribute of the text line elements.
    */
    lineClassName: _propTypes2.default.string,

    /**
    * Specifies the number of lines in the skeleton.
    */
    lines: _propTypes2.default.number,

    /**
    * Specifies the font-size (effectively the height) of the skeleton elements,
    in any valid dimension type.
    */
    size: _propTypes2.default.string,

    /**
    * Specifies any inline styles to be applied to the skeleton.
    */
    style: _propTypes2.default.object,

    /**
    * Specifies the element type to be constructed.
    */
    type: _propTypes2.default.string,

    /**
    * Specifies the width of the skeleton elements' children.
    */
    width: _propTypes2.default.string
};

exports.default = SkeletonText;