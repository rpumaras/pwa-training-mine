'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _toConsumableArray2 = require('babel-runtime/helpers/toConsumableArray');

var _toConsumableArray3 = _interopRequireDefault(_toConsumableArray2);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/* * *  *  * *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */
/* Copyright (c) 2018 Mobify Research & Development Inc. All rights reserved. */
/* * *  *  * *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */

var panelCache = {};

var renderFullTree = function renderFullTree() {
    var root = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    var expanded = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    var getRealPath = arguments[2];
    var alreadyRenderedExpandedPanel = arguments[3];

    // When possible, return the cached panels. We want to make sure that we've
    // already reached the expanded result before doing this To make sure that
    // we don't return its cached parent and skip it
    if (alreadyRenderedExpandedPanel && panelCache[root.path]) {
        // The || false here makes no sense, but if it's not there, styleguidist
        // throws an error while trying to parse this component
        return panelCache[root.path] || false;
    }

    var result = [];

    if (root.path === expanded.path) {
        // Skip the link for this entry and its direct children
        // Instead, render its children's children
        var immediateChildren = root.children || [];
        result = immediateChildren.reduce(function (acc, _ref) {
            var children = _ref.children;

            if (!children) {
                return acc;
            }

            return acc.concat(children.map(function (child) {
                return renderFullTree(child, expanded, getRealPath, true);
            }));
        }, []);
    } else {
        var childNodes = [];
        if (root.children) {
            childNodes = root.children.map(function (child) {
                return renderFullTree(child, expanded, getRealPath, alreadyRenderedExpandedPanel);
            });
        }

        result = [_react2.default.createElement(
            'a',
            { href: getRealPath(root.path), key: root.path },
            root.title
        )].concat((0, _toConsumableArray3.default)(childNodes));
    }

    panelCache[root.path] = result;

    return result;
};

var NonExpandedItems = function (_React$Component) {
    (0, _inherits3.default)(NonExpandedItems, _React$Component);

    function NonExpandedItems() {
        (0, _classCallCheck3.default)(this, NonExpandedItems);
        return (0, _possibleConstructorReturn3.default)(this, (NonExpandedItems.__proto__ || (0, _getPrototypeOf2.default)(NonExpandedItems)).apply(this, arguments));
    }

    (0, _createClass3.default)(NonExpandedItems, [{
        key: 'shouldComponentUpdate',
        value: function shouldComponentUpdate(nextProps) {
            return nextProps.allowRerender;
        }
    }, {
        key: 'componentDidUpdate',
        value: function componentDidUpdate() {
            this.props.onRenderComplete();
        }
    }, {
        key: 'render',
        value: function render() {
            var _props = this.props,
                root = _props.root,
                expanded = _props.expanded,
                getRealPath = _props.getRealPath;

            return _react2.default.createElement(
                'div',
                {
                    className: 'pw-nav-menu__non-expanded-items u-visually-hidden',
                    'aria-hidden': 'true'
                },
                renderFullTree(root, expanded, getRealPath, false)
            );
        }
    }]);
    return NonExpandedItems;
}(_react2.default.Component);

NonExpandedItems.propTypes = {
    expanded: _propTypes2.default.object,
    getRealPath: _propTypes2.default.func,
    root: _propTypes2.default.object,
    onRenderComplete: _propTypes2.default.func
};

exports.default = NonExpandedItems;