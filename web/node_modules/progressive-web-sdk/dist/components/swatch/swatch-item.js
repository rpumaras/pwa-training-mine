'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _button = require('../button');

var _button2 = _interopRequireDefault(_button);

var _utils = require('../../utils/utils');

var _dataObjects = require('../../analytics/data-objects/');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Related component:
 *
 * * [Swatch](#!/Swatch)
 *
 * This component is used to display items inside `Swatch` component.
 *
 * @example ./DESIGN.md
 */

/* * *  *  * *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */
/* Copyright (c) 2018 Mobify Research & Development Inc. All rights reserved. */
/* * *  *  * *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */

var SwatchItem = function SwatchItem(props) {
    var analyticsContent = props.analyticsContent,
        analyticsName = props.analyticsName,
        children = props.children,
        className = props.className,
        color = props.color,
        disabled = props.disabled,
        label = props.label,
        selected = props.selected,
        value = props.value,
        _onClick = props.onClick;


    var itemClasses = (0, _classnames2.default)('pw-swatch__item', {
        'pw--selected': selected
    }, className);

    var chipClasses = (0, _classnames2.default)('pw-swatch__chip', {
        'pw--disabled': disabled
    });

    var buttonClasses = (0, _classnames2.default)('pw-swatch__button', {
        'pw--active': selected
    });

    return _react2.default.createElement(
        'div',
        { className: itemClasses, key: value },
        _react2.default.createElement(
            _button2.default,
            {
                className: buttonClasses,
                innerClassName: 'pw-swatch__button-inner',
                disabled: disabled,
                onClick: function onClick() {
                    return _onClick(value);
                },
                role: 'radio',
                'aria-checked': selected,
                'data-analytics-name': _dataObjects.UI_NAME.swatch + ':' + analyticsName,
                'data-analytics-content': analyticsContent
            },
            _react2.default.createElement(
                'div',
                { className: chipClasses },
                _react2.default.createElement(
                    'div',
                    {
                        className: 'pw-swatch__chip-inner',
                        style: { backgroundColor: color }
                    },
                    children
                )
            ),
            label && _react2.default.createElement(
                'div',
                { className: 'pw-swatch__outer-label' },
                label
            )
        )
    );
};

SwatchItem.defaultProps = {
    onClick: _utils.noop
};

SwatchItem.propTypes = {
    /**
     * Adds values to the `data-analytics-content` attribute of the input
     */
    analyticsContent: _propTypes2.default.string,
    /**
     * Adds values to the `data-analytics-name` attribute of the input
     */
    analyticsName: _propTypes2.default.string,
    /**
     * The children to be rendered within the chip.
     */
    children: _propTypes2.default.node,

    /**
     * Adds values to the `class` attribute of the root element.
     */
    className: _propTypes2.default.string,

    /**
     * If a valid hex or CSS rgb color is provided here,
     * it will be shown as the background-color of the tile.
     */
    color: _propTypes2.default.string,

    /**
     * Indicates if this option is disabled.
     */
    disabled: _propTypes2.default.bool,

    /**
     * The label to display for the option. This is rendered outside of the chip.
     */
    label: _propTypes2.default.node,

    /**
     * PROVIDED INTERNALLY. Indicates if the option is selected.
     */
    selected: _propTypes2.default.bool,

    /**
     * The value for the option.
     */
    value: _propTypes2.default.string,

    /**
     * PROVIDED INTERNALLY.
     * If you wish to call a function when a SwatchItem is clicked,
     * use the Swatch's onChange prop.
     * This function is called whenever the user selects an option.
     * It is passed the new value.
     */
    onClick: _propTypes2.default.func
};

exports.default = SwatchItem;