'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
/* * *  *  * *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */
/* Copyright (c) 2018 Mobify Research & Development Inc. All rights reserved. */
/* * *  *  * *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */

// Default to matching any path on the current origin
var reactRoutes = [];
var blacklist = [];

var setRouteList = exports.setRouteList = function setRouteList(regexes) {
    reactRoutes = regexes;
};
var setBlacklist = exports.setBlacklist = function setBlacklist(routes) {
    blacklist = routes.map(function (text) {
        return RegExp(text);
    });
};

var getRouteList = exports.getRouteList = function getRouteList() {
    return reactRoutes;
};
var getBlacklist = exports.getBlacklist = function getBlacklist() {
    return blacklist;
};

var ORIGIN =
// The else clause is only for real browsers.
exports.ORIGIN = window.location.href === 'about:blank' ? 'https://www.mobify.com' // for testing!
/* istanbul ignore next */
: window.location.origin;

var isBlacklisted = exports.isBlacklisted = function isBlacklisted(href) {
    return blacklist.some(function (regex) {
        return regex.test(href);
    });
};

var isReactRoute = exports.isReactRoute = function isReactRoute(href) {
    // Have blacklisted routes fall through immediately
    if (isBlacklisted(href)) {
        return false;
    }

    // We don't match on fragments and queries (yet?)
    if (href.includes('#') || href.includes('?')) {
        return isReactRoute(href.split('#')[0].split('?')[0]);
    }

    if (href.startsWith(ORIGIN)) {
        return isReactRoute(href.replace(ORIGIN, ''));
    }

    if (href.startsWith('http') || href.startsWith('//')) {
        return false;
    }

    return reactRoutes.some(function (regex) {
        return regex.test(href);
    });
};

exports.default = isReactRoute;