'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.SelectorRoute = exports.SelectorRouter = undefined;

var _getIterator2 = require('babel-runtime/core-js/get-iterator');

var _getIterator3 = _interopRequireDefault(_getIterator2);

var _slicedToArray2 = require('babel-runtime/helpers/slicedToArray');

var _slicedToArray3 = _interopRequireDefault(_slicedToArray2);

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _jqueryResponse = require('../jquery-response');

var _fetchUtils = require('../utils/fetch-utils');

var _reactRouter = require('react-router');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/* * *  *  * *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */
/* Copyright (c) 2018 Mobify Research & Development Inc. All rights reserved. */
/* * *  *  * *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */

var SelectorRouter = function (_Route) {
    (0, _inherits3.default)(SelectorRouter, _Route);

    function SelectorRouter() {
        (0, _classCallCheck3.default)(this, SelectorRouter);
        return (0, _possibleConstructorReturn3.default)(this, (SelectorRouter.__proto__ || (0, _getPrototypeOf2.default)(SelectorRouter)).apply(this, arguments));
    }

    return SelectorRouter;
}(_reactRouter.Route);

var SelectorRoute = function SelectorRoute() {
    (0, _classCallCheck3.default)(this, SelectorRoute);
};

SelectorRouter.defaultProps = {
    onChange: function onChange(nextState, prevState, replace, cb) {
        var _this2 = this;

        // Manually call getComponent,
        // as it isn't always called when the route changes
        this.getComponent(nextState, function (_, comp) {
            _this2.component = comp;
            cb();
        });
    },
    getComponent: function getComponent(nextState, cb) {
        var _this3 = this;

        var _nextState$location = nextState.location,
            pathname = _nextState$location.pathname,
            search = _nextState$location.search;


        var url = '' + pathname + search;
        var request = this.makeRequest ? this.makeRequest(url) : (0, _fetchUtils.makeRequest)(url);
        return request.catch(function () {
            _this3.handleFetchError && _this3.handleFetchError();
        }).then(_jqueryResponse.jqueryResponse).then(function (_ref) {
            var _ref2 = (0, _slicedToArray3.default)(_ref, 2),
                $ = _ref2[0],
                $doc = _ref2[1];

            // eslint-disable-line no-unused-vars
            var _iteratorNormalCompletion = true;
            var _didIteratorError = false;
            var _iteratorError = undefined;

            try {
                for (var _iterator = (0, _getIterator3.default)(_this3.childRoutes), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
                    var childRoute = _step.value;

                    if ($doc.find(childRoute.selector).length) {
                        return childRoute;
                    }
                }
            } catch (err) {
                _didIteratorError = true;
                _iteratorError = err;
            } finally {
                try {
                    if (!_iteratorNormalCompletion && _iterator.return) {
                        _iterator.return();
                    }
                } finally {
                    if (_didIteratorError) {
                        throw _iteratorError;
                    }
                }
            }

            throw Error('no selector matched');
        }).catch(function () {
            return {
                component: _this3.defaultComponent,
                routeName: _this3.defaultRouteName
            };
        }).then(function (matchedRoute) {
            matchedRoute.onEnter && matchedRoute.onEnter();
            return matchedRoute;
        }).then(function (matchedRoute) {
            // We need to copy the component from the child route into this component
            // As we reference it directly within the app container and template.jsx
            _this3.component = matchedRoute.component;
            _this3.routeName = matchedRoute.routeName;

            return cb(null, _this3.component);
        });
    }
};

SelectorRouter.propTypes = {
    defaultComponent: _propTypes2.default.func.isRequired,
    defaultRouteName: _propTypes2.default.string.isRequired
};

SelectorRoute.propTypes = {
    routeName: _propTypes2.default.string.isRequired
};

exports.SelectorRouter = SelectorRouter;
exports.SelectorRoute = SelectorRoute;

//  EXAMPLE USAGE IN <Router>
// <SelectorRouter path="potions*" defaultComponent={PLP} defaultRouteName="productListPage">
//     <SelectorRoute selector=".category-view2" component={Example} routeName="example" />
//     <SelectorRoute selector=".pdp-content" component={Example2} routeName="example2" />
// </SelectorRouter>