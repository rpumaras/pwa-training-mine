'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.getLocationsCustomContent = exports.getCheckoutCustomContent = exports.getShippingMethods = exports.getAvailableRegions = exports.getSelectedCountryID = exports.getBillingSameAsShipping = exports.getRegions = exports.getCountries = exports.getLocations = exports.getEmailAddress = exports.getCheckoutPageMeta = exports.getCheckout = undefined;

var _immutable = require('immutable');

var _immutable2 = _interopRequireDefault(_immutable);

var _reselect = require('reselect');

var _reselectImmutableHelpers = require('reselect-immutable-helpers');

var _selectors = require('../form/selectors');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/* * *  *  * *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */
/* Copyright (c) 2018 Mobify Research & Development Inc. All rights reserved. */
/* * *  *  * *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */

var getCheckout = exports.getCheckout = function getCheckout(_ref) {
    var checkout = _ref.checkout;
    return checkout;
};

var getCheckoutPageMeta = exports.getCheckoutPageMeta = (0, _reselectImmutableHelpers.createGetSelector)(getCheckout, 'pageMeta', _immutable2.default.Map());

var getEmailAddress = exports.getEmailAddress = (0, _reselectImmutableHelpers.createGetSelector)(getCheckout, 'email');

var getLocations = exports.getLocations = (0, _reselectImmutableHelpers.createGetSelector)(getCheckout, 'locations', _immutable2.default.Map());
var getCountries = exports.getCountries = (0, _reselectImmutableHelpers.createGetSelector)(getLocations, 'countries', _immutable2.default.List());
var getRegions = exports.getRegions = (0, _reselectImmutableHelpers.createGetSelector)(getLocations, 'regions', _immutable2.default.List());

var getBillingSameAsShipping = exports.getBillingSameAsShipping = (0, _reselectImmutableHelpers.createGetSelector)(getCheckout, 'billingSameAsShipping');

var getSelectedCountryID = exports.getSelectedCountryID = function getSelectedCountryID(formKey) {
    return (0, _reselect.createSelector)((0, _selectors.getFormValues)(formKey), function (values) {
        return values ? values.countryId : null;
    });
};

// Filter list of available regions based on what user has selected as country
// Accepts a formKey that determines which form's country selection should be used
var getAvailableRegions = exports.getAvailableRegions = function getAvailableRegions(formKey) {
    return (0, _reselect.createSelector)(getRegions, getSelectedCountryID(formKey), function (regions, id) {
        return regions.filter(function (region) {
            return region.get('countryId') === id;
        });
    });
};

var getShippingMethods = exports.getShippingMethods = (0, _reselectImmutableHelpers.createGetSelector)(getCheckout, 'shippingMethods', _immutable2.default.List());

var getCheckoutCustomContent = exports.getCheckoutCustomContent = (0, _reselectImmutableHelpers.createGetSelector)(getCheckout, 'custom', _immutable2.default.Map());
var getLocationsCustomContent = exports.getLocationsCustomContent = (0, _reselectImmutableHelpers.createGetSelector)(getLocations, 'custom', _immutable2.default.Map());