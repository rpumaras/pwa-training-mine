'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.getShippingLabel = exports.getShippingAmount = exports.getShipping = exports.getDiscount = exports.getCoupons = exports.getTax = exports.getOrderTotal = exports.getSubtotal = exports.getCartPageMeta = exports.getCartSummaryCount = exports.getCartHasItems = exports.getProductIdByItemId = exports.getItemById = exports.getCartItemsFull = exports.getCartItems = exports.getCartLoaded = exports.getCartCustomContent = exports.getCart = undefined;

var _immutable = require('immutable');

var _immutable2 = _interopRequireDefault(_immutable);

var _reselect = require('reselect');

var _reselectImmutableHelpers = require('reselect-immutable-helpers');

var _selectors = require('../products/selectors');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/* * *  *  * *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */
/* Copyright (c) 2018 Mobify Research & Development Inc. All rights reserved. */
/* * *  *  * *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */

var getCart = exports.getCart = function getCart(_ref) {
    var cart = _ref.cart;
    return cart;
};
var getCartCustomContent = exports.getCartCustomContent = (0, _reselectImmutableHelpers.createGetSelector)(getCart, 'custom', _immutable2.default.Map());

var getCartLoaded = exports.getCartLoaded = (0, _reselect.createSelector)(getCart, function (cart) {
    return cart.get('items') !== undefined;
});

/**
 * @return Returns list of cart items
 */
var getCartItems = exports.getCartItems = (0, _reselectImmutableHelpers.createGetSelector)(getCart, 'items', _immutable2.default.List());

/**
 * @return Returns list of cart items merged with the product data for each cart item
 */
var getCartItemsFull = exports.getCartItemsFull = (0, _reselect.createSelector)(getCartItems, _selectors.getProducts, function (items, products) {
    return items.map(function (item) {
        var productId = item.get('productId');
        var cartId = item.get('id');
        return item.mergeDeep(products.find(function (product) {
            return productId === product.get('id');
        })).set('id', cartId);
    });
});

var getItemById = exports.getItemById = function getItemById(itemId) {
    return (0, _reselect.createSelector)(getCartItems, function (items) {
        var filteredItems = items.filter(function (item) {
            return itemId === item.get('id');
        });
        return filteredItems.size ? filteredItems.get(0) : _immutable2.default.Map();
    });
};

var getProductIdByItemId = exports.getProductIdByItemId = function getProductIdByItemId(itemId) {
    return (0, _reselectImmutableHelpers.createGetSelector)(getItemById(itemId), 'productId');
};

var getCartHasItems = exports.getCartHasItems = (0, _reselect.createSelector)(getCartItems, function (items) {
    return items.size > 0;
});

var getCartSummaryCount = exports.getCartSummaryCount = (0, _reselect.createSelector)(getCartItems, function (items) {
    return items.reduce(function (quantity, cartItem) {
        return quantity + cartItem.get('quantity');
    }, 0);
});

var getCartPageMeta = exports.getCartPageMeta = (0, _reselectImmutableHelpers.createGetSelector)(getCart, 'pageMeta', _immutable2.default.Map());

var getSubtotal = exports.getSubtotal = (0, _reselectImmutableHelpers.createGetSelector)(getCart, 'subtotal');
var getOrderTotal = exports.getOrderTotal = (0, _reselectImmutableHelpers.createGetSelector)(getCart, 'orderTotal');
var getTax = exports.getTax = (0, _reselectImmutableHelpers.createGetSelector)(getCart, 'tax');

var getCoupons = exports.getCoupons = (0, _reselectImmutableHelpers.createGetSelector)(getCart, 'coupons', _immutable2.default.List());
var getDiscount = exports.getDiscount = (0, _reselectImmutableHelpers.createGetSelector)(getCart, 'discount');

var getShipping = exports.getShipping = (0, _reselectImmutableHelpers.createGetSelector)(getCart, 'shipping', _immutable2.default.Map());
var getShippingAmount = exports.getShippingAmount = (0, _reselectImmutableHelpers.createGetSelector)(getShipping, 'amount');
var getShippingLabel = exports.getShippingLabel = (0, _reselectImmutableHelpers.createGetSelector)(getShipping, 'label');