'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _defineProperty2 = require('babel-runtime/helpers/defineProperty');

var _defineProperty3 = _interopRequireDefault(_defineProperty2);

var _handleActions; /* * *  *  * *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */
/* Copyright (c) 2018 Mobify Research & Development Inc. All rights reserved. */
/* * *  *  * *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */

var _reduxActions = require('redux-actions');

var _immutable = require('immutable');

var _immutable2 = _interopRequireDefault(_immutable);

var _actions = require('./actions');

var modalActions = _interopRequireWildcard(_actions);

var _actions2 = require('../app/actions');

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var initialState = _immutable2.default.Map();

var modalReducer = (0, _reduxActions.handleActions)((_handleActions = {}, (0, _defineProperty3.default)(_handleActions, modalActions.openModal, function (state, _ref) {
    var modalName = _ref.payload.modalName;
    return state.setIn([modalName, 'open'], true);
}), (0, _defineProperty3.default)(_handleActions, modalActions.closeModal, function (state, _ref2) {
    var modalName = _ref2.payload.modalName;

    // closeModal should also set a modal's `persistent` to false
    // otherwise if modal is closed by user before route change
    // Route change will cause the close modal to open again
    return state.setIn([modalName, 'open'], false).setIn([modalName, 'persistent'], false);
}), (0, _defineProperty3.default)(_handleActions, modalActions.openPersistentModal, function (state, _ref3) {
    var modalName = _ref3.payload.modalName;

    return state.setIn([modalName, 'open'], true).setIn([modalName, 'persistent'], true);
}), (0, _defineProperty3.default)(_handleActions, modalActions.closeAllModals, function (state) {
    return state.map(function (modal) {
        return modal.set('open', false).set('persistent', false);
    });
}), (0, _defineProperty3.default)(_handleActions, _actions2.onRouteChanged, function (state) {
    return state.map(function (modal) {
        return modal.get('persistent') ?
        // If a modal is persistent, keep it open
        modal.set('open', !!modal.get('open'))
        // Otherwise, close the modal
        : modal.set('open', false);
    });
}), (0, _defineProperty3.default)(_handleActions, modalActions.persistModal, function (state, _ref4) {
    var modalName = _ref4.payload.modalName;
    return state.setIn([modalName, 'persistent'], true);
}), (0, _defineProperty3.default)(_handleActions, modalActions.preRenderModal, function (state, _ref5) {
    var modalName = _ref5.payload.modalName;
    return state.setIn([modalName, 'prerender'], true);
}), _handleActions), initialState);

exports.default = modalReducer;