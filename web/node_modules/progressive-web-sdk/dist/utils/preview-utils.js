'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.loadPreview = exports.shouldPreview = exports.SHOULD_PREVIEW_QUERY = exports.isV8Tag = exports.isPreview = exports.getCookie = undefined;

var _utils = require('./utils');

var PREVIEW_URL = 'https://preview.mobify.com/v7/'; /* * *  *  * *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */
/* Copyright (c) 2018 Mobify Research & Development Inc. All rights reserved. */
/* * *  *  * *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */

var getCookie = exports.getCookie = function getCookie(name) {
    // Internet Explorer treats empty cookies differently, it does
    // not include the '=', so our regex has to be extra complicated.
    var re = new RegExp('(?:^|; )' + name + '(?:(?:=([^;]*))|(?:; |$))');
    var match = document.cookie.match(re);
    return match && match[1] || '';
};

var isPreview = exports.isPreview = function isPreview() {
    return getCookie('mobify-path') === 'true' || /mobify-path=true/.test(window.location.hash);
};

var isV8Tag = exports.isV8Tag = function isV8Tag() {
    if (window.Mobify.tagVersion && window.Mobify.tagVersion[0] === 8) {
        return true;
    }
    return false;
};

var SHOULD_PREVIEW_QUERY = exports.SHOULD_PREVIEW_QUERY = 'script[src="' + PREVIEW_URL + '"]';
var shouldPreview = exports.shouldPreview = function shouldPreview() {
    // If the tag is not a V8 tag, then the tag itself will deal with previewing.
    if (!isV8Tag()) {
        return false;
    }

    var previewHasRun = document.querySelectorAll(SHOULD_PREVIEW_QUERY).length > 0;
    if (previewHasRun) {
        return false;
    }

    return isPreview();
};

var loadPreview = /* istanbul ignore next */exports.loadPreview = function loadPreview() {
    /* istanbul ignore next */
    (0, _utils.loadScript)({
        src: PREVIEW_URL,
        docwrite: window.Mobify.shouldLoadPWA,
        isAsync: true
    });
};