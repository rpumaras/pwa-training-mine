'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.makeJsonEncodedRequest = exports.makeFormEncodedRequest = exports.formEncode = exports.makeRequest = undefined;

var _stringify = require('babel-runtime/core-js/json/stringify');

var _stringify2 = _interopRequireDefault(_stringify);

var _typeof2 = require('babel-runtime/helpers/typeof');

var _typeof3 = _interopRequireDefault(_typeof2);

var _keys = require('babel-runtime/core-js/object/keys');

var _keys2 = _interopRequireDefault(_keys);

var _extends2 = require('babel-runtime/helpers/extends');

var _extends3 = _interopRequireDefault(_extends2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/* * *  *  * *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */
/* Copyright (c) 2018 Mobify Research & Development Inc. All rights reserved. */
/* * *  *  * *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */

var makeRequest = exports.makeRequest = function makeRequest(url, options) {
    return fetch(url, (0, _extends3.default)({}, options, { credentials: 'same-origin' }));
};

/**
 * Form encodes nested URL query parameters using recursion
 * Adapted from http://stackoverflow.com/questions/1714786/querystring-encoding-of-a-javascript-object
*/
var formEncode = exports.formEncode = function formEncode(obj, prefix) {
    return (0, _keys2.default)(obj).map(function (key) {
        var name = prefix ? prefix + '[' + key + ']' : key;
        var value = obj[key];
        if (value !== null && (typeof value === 'undefined' ? 'undefined' : (0, _typeof3.default)(value)) === 'object') {
            return formEncode(value, name);
        }
        return window.encodeURIComponent(name) + '=' + window.encodeURIComponent(value);
    }).join('&');
};

/**
 * Make a request given the provided url and options, form-encoding the data
 * into the body of the request.
 */
var makeFormEncodedRequest = exports.makeFormEncodedRequest = function makeFormEncodedRequest(url, data, options) {
    return makeRequest(url, (0, _extends3.default)({}, options, {
        body: formEncode(data),
        headers: (0, _extends3.default)({}, options.headers || {}, {
            'Content-Type': 'application/x-www-form-urlencoded'
        })
    }));
};

var makeJsonEncodedRequest = exports.makeJsonEncodedRequest = function makeJsonEncodedRequest(url, data, options) {
    return makeRequest(url, (0, _extends3.default)({}, options, {
        body: (0, _stringify2.default)(data),
        headers: (0, _extends3.default)({}, options.headers || {}, {
            'Content-Type': 'application/json'
        })
    }));
};