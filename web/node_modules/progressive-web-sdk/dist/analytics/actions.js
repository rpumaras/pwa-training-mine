'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.sendApplePayButtonClickedAnalytics = exports.sendApplePayButtonDisplayedAnalytics = exports.sendApplePayOptionDisplayedAnalytics = exports.sendProductDetailAnalytics = exports.sendProductImpressionAnalytics = exports.sendLaunchedFromHomeScreenAnalytics = exports.sendDismissA2HSAnalytics = exports.sendAddA2HSAnalytics = exports.sendA2HSPromptAnalytics = exports.formSubmitErrorWrapper = exports.sendFormSubmitErrorsAnalytics = exports.ReduxFormPluginOption = exports.sendFormFieldValidationErrorsAnalytics = exports.createModalAnalyticsMeta = exports.dispatchWishlistAnalytics = exports.dispatchCartAnalytics = exports.trackPerformance = exports.countAsset = exports.setPageTemplateName = exports.setCurrencyCode = exports.sendOfflineModeUsedAnalytics = exports.sendOfflinePageview = exports.onPageReady = undefined;

var _keys = require('babel-runtime/core-js/object/keys');

var _keys2 = _interopRequireDefault(_keys);

var _extends3 = require('babel-runtime/helpers/extends');

var _extends4 = _interopRequireDefault(_extends3);

var _defineProperty2 = require('babel-runtime/helpers/defineProperty');

var _defineProperty3 = _interopRequireDefault(_defineProperty2);

var _actionCreation = require('../utils/action-creation');

var _dataObjects = require('./data-objects/');

var _analyticsManager = require('./analytics-manager');

var _analyticsManager2 = _interopRequireDefault(_analyticsManager);

var _utils = require('../utils/utils');

var _selectors = require('../store/cart/selectors');

var _selectors2 = require('../store/products/selectors');

var _selectors3 = require('../store/user/selectors');

var _reduxForm = require('redux-form');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/* * *  *  * *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */
/* Copyright (c) 2018 Mobify Research & Development Inc. All rights reserved. */
/* * *  *  * *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */

var onPageReady = exports.onPageReady = (0, _actionCreation.createActionWithAnalytics)('Send pageview analytics', [], _dataObjects.EVENT_ACTION.pageview, function (routeName) {
    return new _dataObjects.Page((0, _defineProperty3.default)({}, _dataObjects.Page.TEMPLATENAME, routeName));
});

var sendOfflinePageview = exports.sendOfflinePageview = (0, _actionCreation.createActionWithAnalytics)('Send offline pageview analytics', [], _dataObjects.EVENT_ACTION.pageview, function (url, routeName, title, offlineSuccess) {
    var _ref2;

    return new _dataObjects.Page((_ref2 = {}, (0, _defineProperty3.default)(_ref2, _dataObjects.Page.LOCATION, url), (0, _defineProperty3.default)(_ref2, _dataObjects.Page.PATH, (0, _utils.extractPathFromURL)(url, false, false)), (0, _defineProperty3.default)(_ref2, _dataObjects.Page.TITLE, title), (0, _defineProperty3.default)(_ref2, _dataObjects.Page.TEMPLATENAME, routeName), (0, _defineProperty3.default)(_ref2, 'status', offlineSuccess ? 'offline_success' : 'offline_failed'), _ref2));
});

var sendOfflineModeUsedAnalytics = exports.sendOfflineModeUsedAnalytics = (0, _actionCreation.createActionWithAnalytics)('Send Offline mode used analytics', [], _dataObjects.EVENT_ACTION.offlineModeUsed, function (durationOfOffline, timestamp, pagesViewed) {
    var offlinePageFailed = pagesViewed.filter(function (_ref3) {
        var inCache = _ref3.inCache;
        return !inCache;
    }).length;
    var offlinePageSuccess = pagesViewed.length - offlinePageFailed;
    return {
        durationOfOffline: durationOfOffline,
        timestamp: timestamp,
        offlinePageFailed: offlinePageFailed,
        offlinePageSuccess: offlinePageSuccess
    };
});

var setCurrencyCode = exports.setCurrencyCode = (0, _actionCreation.createActionWithAnalytics)('Set currency code for analytics', [], _dataObjects.EVENT_ACTION.setCurrency, function (currencyCode) {
    return { currencyCode: currencyCode };
});

var setPageTemplateName = exports.setPageTemplateName = (0, _actionCreation.createActionWithAnalytics)('Set page template name', [], _dataObjects.EVENT_ACTION.setPageTemplateName, function (templateName) {
    return { templateName: templateName };
});

var countAsset = exports.countAsset = function countAsset() {
    return _analyticsManager2.default.countAsset();
};

var trackPerformance = exports.trackPerformance = function trackPerformance(type, value) {
    return _analyticsManager2.default.collectPerformance(type, value);
};

/**
 * Cart Analytics
 */
var createCartAnalyticsMeta = function createCartAnalyticsMeta(count, subtotal, product) {
    var _ref4;

    return {
        cart: new _dataObjects.ShoppingList((_ref4 = {}, (0, _defineProperty3.default)(_ref4, _dataObjects.ShoppingList.TYPE, 'cart'), (0, _defineProperty3.default)(_ref4, 'count', count), (0, _defineProperty3.default)(_ref4, 'subtotal', subtotal), _ref4)),
        product: product
    };
};

var sendAddToCartAnalytics = (0, _actionCreation.createActionWithAnalytics)('Send cart analytics', [], _dataObjects.EVENT_ACTION.addToCart, createCartAnalyticsMeta);
var sendRemoveFromCartAnalytics = (0, _actionCreation.createActionWithAnalytics)('Send cart analytics', [], _dataObjects.EVENT_ACTION.removeFromCart, createCartAnalyticsMeta);

var dispatchCartAnalytics = exports.dispatchCartAnalytics = function dispatchCartAnalytics(action, dispatch, getState, productId, quantity) {
    var currentState = getState();
    var cartCount = (0, _selectors.getCartSummaryCount)(currentState);
    var subtotal = (0, _selectors.getSubtotal)(currentState);
    var productData = (0, _selectors2.getProductById)(productId)(currentState).toJS();
    var product = new _dataObjects.Product(quantity !== undefined ? (0, _extends4.default)({}, productData, (0, _defineProperty3.default)({}, _dataObjects.Product.QUANTITY, quantity)) : productData);
    var actionCreator = action === _dataObjects.EVENT_ACTION.addToCart ? sendAddToCartAnalytics : sendRemoveFromCartAnalytics;

    dispatch(actionCreator(cartCount, subtotal, product));
};

var createWishlistAnalyticsMeta = function createWishlistAnalyticsMeta(count, product) {
    var _ref5;

    return {
        cart: new _dataObjects.ShoppingList((_ref5 = {}, (0, _defineProperty3.default)(_ref5, _dataObjects.ShoppingList.TYPE, _dataObjects.UI_NAME.wishlist), (0, _defineProperty3.default)(_ref5, 'count', count), _ref5)),
        product: product
    };
};

var sendAddToWishlistAnalytics = (0, _actionCreation.createActionWithAnalytics)('Send wishlist analytics', [], _dataObjects.EVENT_ACTION.addToWishlist, createWishlistAnalyticsMeta);
var sendRemoveFromWishlistAnalytics = (0, _actionCreation.createActionWithAnalytics)('Send wishlist analytics', [], _dataObjects.EVENT_ACTION.removeFromWishlist, createWishlistAnalyticsMeta);

var dispatchWishlistAnalytics = exports.dispatchWishlistAnalytics = function dispatchWishlistAnalytics(action, dispatch, getState, productId, quantity) {
    var currentState = getState();
    var wishlistCount = parseInt((0, _selectors3.getWishlistItemCount)(currentState));
    var product = new _dataObjects.Product((0, _selectors2.getProductById)(productId)(currentState).toJS());
    var isAddAction = action === _dataObjects.EVENT_ACTION.addToWishlist;
    var actionCreator = isAddAction ? sendAddToWishlistAnalytics : sendRemoveFromWishlistAnalytics;

    if (isAddAction) {
        wishlistCount += parseInt(quantity);
    }

    dispatch(actionCreator('' + wishlistCount, product));
};

/**
 * Modal Analytics
 */
var createModalAnalyticsMeta = exports.createModalAnalyticsMeta = function createModalAnalyticsMeta(action, name, analyticsName) {
    var _ref6;

    return new _dataObjects.UIInteraction((_ref6 = {}, (0, _defineProperty3.default)(_ref6, _dataObjects.UIInteraction.SUBJECT, _dataObjects.UI_SUBJECT.app), (0, _defineProperty3.default)(_ref6, _dataObjects.UIInteraction.ACTION, action), (0, _defineProperty3.default)(_ref6, _dataObjects.UIInteraction.OBJECT, _dataObjects.UI_OBJECT.modal), (0, _defineProperty3.default)(_ref6, 'name', analyticsName || name), _ref6));
};

/**
 * Form Field Validation Error Analytics
 */
var sendFormFieldValidationErrorsAnalytics = exports.sendFormFieldValidationErrorsAnalytics = function sendFormFieldValidationErrorsAnalytics(_ref7) {
    var formId = _ref7.formId,
        fields = _ref7.fields;

    var form = document.getElementById(formId);
    if (!(form && (0, _analyticsManager.hasAnalyticsNameAttribute)(form, 'Form', _analyticsManager2.default.options.debug))) {
        return;
    }

    var formAnalyticsName = form.getAttribute(_analyticsManager.DATA_NAME);

    /* istanbul ignore else */
    if (fields) {
        (0, _keys2.default)(fields).forEach(function (fieldName) {
            if (fieldName === '_error') {
                var _ref8;

                _analyticsManager2.default.distribute(_dataObjects.EVENT_ACTION.uiInteraction, new _dataObjects.UIInteraction((_ref8 = {}, (0, _defineProperty3.default)(_ref8, _dataObjects.UIInteraction.SUBJECT, _dataObjects.UI_SUBJECT.app), (0, _defineProperty3.default)(_ref8, _dataObjects.UIInteraction.ACTION, _dataObjects.UI_ACTION.display), (0, _defineProperty3.default)(_ref8, _dataObjects.UIInteraction.OBJECT, _dataObjects.UI_OBJECT.error), (0, _defineProperty3.default)(_ref8, _dataObjects.UIInteraction.NAME, formAnalyticsName + '_form'), (0, _defineProperty3.default)(_ref8, _dataObjects.UIInteraction.CONTENT, fields[fieldName]), _ref8)));
            } else {
                var element = document.querySelectorAll('#' + formId + ' [name="' + fieldName + '"]')[0];

                if (element && (0, _analyticsManager.hasAnalyticsNameAttribute)(element, 'Element', _analyticsManager2.default.options.debug)) {
                    var _ref9;

                    var elementAnalyticsName = element.getAttribute(_analyticsManager.DATA_NAME);
                    _analyticsManager2.default.distribute(_dataObjects.EVENT_ACTION.uiInteraction, new _dataObjects.UIInteraction((_ref9 = {}, (0, _defineProperty3.default)(_ref9, _dataObjects.UIInteraction.SUBJECT, _dataObjects.UI_SUBJECT.app), (0, _defineProperty3.default)(_ref9, _dataObjects.UIInteraction.ACTION, _dataObjects.UI_ACTION.display), (0, _defineProperty3.default)(_ref9, _dataObjects.UIInteraction.OBJECT, _dataObjects.UI_OBJECT.error), (0, _defineProperty3.default)(_ref9, _dataObjects.UIInteraction.NAME, formAnalyticsName + '_form:' + elementAnalyticsName), (0, _defineProperty3.default)(_ref9, _dataObjects.UIInteraction.CONTENT, fields[fieldName]), _ref9)));
                }
            }
        });
    }
};

/**
 * Redux Form plugin for tracking form validation errors
 */
var lastUpdateSyncError = void 0;
var ReduxFormPluginOption = exports.ReduxFormPluginOption = {
    all: function all(state, action) {
        // Tracking form errors
        try {
            if (action.type === _reduxForm.actionTypes.STOP_SUBMIT) {
                // Track submit validation errors
                sendFormFieldValidationErrorsAnalytics({
                    formId: action.meta.form,
                    fields: action.payload
                });
                lastUpdateSyncError = undefined;
            } else if (action.type === _reduxForm.actionTypes.UPDATE_SYNC_ERRORS) {
                // Keep reference of the last update sync errors
                lastUpdateSyncError = action;
            } else if (lastUpdateSyncError && action.meta && action.meta.field && lastUpdateSyncError.payload.syncErrors[action.meta.field] && action.type === _reduxForm.actionTypes.BLUR) {
                // Track sync validation errors happening on input blur
                sendFormFieldValidationErrorsAnalytics({
                    formId: lastUpdateSyncError.meta.form,
                    fields: (0, _defineProperty3.default)({}, action.meta.field, lastUpdateSyncError.payload.syncErrors[action.meta.field])
                });
            } else if (lastUpdateSyncError && action.type === _reduxForm.actionTypes.SET_SUBMIT_FAILED) {
                // Track sync validation errors when submit failed
                sendFormFieldValidationErrorsAnalytics({
                    formId: lastUpdateSyncError.meta.form,
                    fields: lastUpdateSyncError.payload.syncErrors
                });
                lastUpdateSyncError = undefined;
            }
        } catch (e) {
            var _ref10;

            _analyticsManager2.default.distribute(_dataObjects.EVENT_ACTION.uiInteraction, new _dataObjects.UIInteraction((_ref10 = {}, (0, _defineProperty3.default)(_ref10, _dataObjects.UIInteraction.SUBJECT, _dataObjects.UI_SUBJECT.app), (0, _defineProperty3.default)(_ref10, _dataObjects.UIInteraction.ACTION, _dataObjects.UI_ACTION.receive), (0, _defineProperty3.default)(_ref10, _dataObjects.UIInteraction.OBJECT, _dataObjects.UI_OBJECT.error), (0, _defineProperty3.default)(_ref10, _dataObjects.UIInteraction.NAME, 'Redux Form Plugin error'), _ref10)));
        }
        return state;
    }

    /**
     * Form Submit Error Analytics
     */
};var sendFormSubmitErrorsAnalytics = exports.sendFormSubmitErrorsAnalytics = function sendFormSubmitErrorsAnalytics(fieldErrors) {
    (0, _keys2.default)(fieldErrors).forEach(function (key) {
        var _ref11;

        _analyticsManager2.default.distribute(_dataObjects.EVENT_ACTION.uiInteraction, new _dataObjects.UIInteraction((_ref11 = {}, (0, _defineProperty3.default)(_ref11, _dataObjects.UIInteraction.SUBJECT, _dataObjects.UI_SUBJECT.app), (0, _defineProperty3.default)(_ref11, _dataObjects.UIInteraction.ACTION, _dataObjects.UI_ACTION.display), (0, _defineProperty3.default)(_ref11, _dataObjects.UIInteraction.OBJECT, _dataObjects.UI_OBJECT.error), (0, _defineProperty3.default)(_ref11, _dataObjects.UIInteraction.NAME, 'submit'), (0, _defineProperty3.default)(_ref11, _dataObjects.UIInteraction.CONTENT, fieldErrors[key]), _ref11)));
    });
};

/**
 * Form Submit Error Wrapper
 */
var formSubmitErrorWrapper = exports.formSubmitErrorWrapper = function formSubmitErrorWrapper(functionResult) {
    return function (dispatch) {
        return dispatch(functionResult).catch(function (error) {
            sendFormSubmitErrorsAnalytics(error.errors);
            throw error;
        });
    };
};

/**
 * A2HS Analytics
 */
var sendA2HSPromptAnalytics = exports.sendA2HSPromptAnalytics = (0, _actionCreation.createActionWithAnalytics)('Send A2HS Prompt analytics', [], _dataObjects.EVENT_ACTION.uiInteraction, function () {
    var _ref12;

    return new _dataObjects.UIInteraction((_ref12 = {}, (0, _defineProperty3.default)(_ref12, _dataObjects.UIInteraction.SUBJECT, _dataObjects.UI_SUBJECT.app), (0, _defineProperty3.default)(_ref12, _dataObjects.UIInteraction.ACTION, _dataObjects.UI_ACTION.display), (0, _defineProperty3.default)(_ref12, _dataObjects.UIInteraction.OBJECT, _dataObjects.UI_OBJECT.element), (0, _defineProperty3.default)(_ref12, 'name', _dataObjects.UI_NAME.addToHome + ':' + _dataObjects.UI_NAME.prompt), _ref12));
});

var sendAddA2HSAnalytics = exports.sendAddA2HSAnalytics = (0, _actionCreation.createActionWithAnalytics)('Send Add A2HS analytics', [], _dataObjects.EVENT_ACTION.uiInteraction, function () {
    var _ref13;

    return new _dataObjects.UIInteraction((_ref13 = {}, (0, _defineProperty3.default)(_ref13, _dataObjects.UIInteraction.SUBJECT, _dataObjects.UI_SUBJECT.user), (0, _defineProperty3.default)(_ref13, _dataObjects.UIInteraction.ACTION, _dataObjects.UI_ACTION.click), (0, _defineProperty3.default)(_ref13, _dataObjects.UIInteraction.OBJECT, _dataObjects.UI_OBJECT.button), (0, _defineProperty3.default)(_ref13, 'name', _dataObjects.UI_NAME.addToHome + ':' + _dataObjects.UI_NAME.accept), _ref13));
});

var sendDismissA2HSAnalytics = exports.sendDismissA2HSAnalytics = (0, _actionCreation.createActionWithAnalytics)('Send Dismiss A2HS analytics', [], _dataObjects.EVENT_ACTION.uiInteraction, function () {
    var _ref14;

    return new _dataObjects.UIInteraction((_ref14 = {}, (0, _defineProperty3.default)(_ref14, _dataObjects.UIInteraction.SUBJECT, _dataObjects.UI_SUBJECT.user), (0, _defineProperty3.default)(_ref14, _dataObjects.UIInteraction.ACTION, _dataObjects.UI_ACTION.click), (0, _defineProperty3.default)(_ref14, _dataObjects.UIInteraction.OBJECT, _dataObjects.UI_OBJECT.button), (0, _defineProperty3.default)(_ref14, 'name', _dataObjects.UI_NAME.addToHome + ':' + _dataObjects.UI_NAME.dismiss), _ref14));
});

var sendLaunchedFromHomeScreenAnalytics = exports.sendLaunchedFromHomeScreenAnalytics = (0, _actionCreation.createActionWithAnalytics)('Send launched from homescreen analytics', [], _dataObjects.EVENT_ACTION.launchedFromHomeScreen, function () {
    var _ref15;

    return new _dataObjects.UIInteraction((_ref15 = {}, (0, _defineProperty3.default)(_ref15, _dataObjects.UIInteraction.SUBJECT, _dataObjects.UI_SUBJECT.user), (0, _defineProperty3.default)(_ref15, _dataObjects.UIInteraction.ACTION, _dataObjects.UI_ACTION.click), (0, _defineProperty3.default)(_ref15, _dataObjects.UIInteraction.OBJECT, _dataObjects.UI_OBJECT.button), (0, _defineProperty3.default)(_ref15, 'name', _dataObjects.UI_NAME.addToHome + ':' + _dataObjects.UI_NAME.launch), _ref15));
});

/**
 * Product Impression Analytics
 */
var sendProductImpressionAnalytics = exports.sendProductImpressionAnalytics = (0, _actionCreation.createActionWithAnalytics)('Send product impression analytics', [], _dataObjects.EVENT_ACTION.productImpression, function (productId) {
    return { productId: productId };
});

/**
 * Product Detail Analytics
 */
var sendProductDetailAnalytics = exports.sendProductDetailAnalytics = (0, _actionCreation.createActionWithAnalytics)('Send product detatil analytics', [], _dataObjects.EVENT_ACTION.productDetail);

/**
 * Apple Pay Analytics
 */
var sendApplePayOptionDisplayedAnalytics = exports.sendApplePayOptionDisplayedAnalytics = (0, _actionCreation.createActionWithAnalytics)('Send Apple Pay option displayed analytics', [], _dataObjects.EVENT_ACTION.applePayOptionDisplayed);

var sendApplePayButtonDisplayedAnalytics = exports.sendApplePayButtonDisplayedAnalytics = (0, _actionCreation.createActionWithAnalytics)('Send Apple Pay button displayed analytics', [], _dataObjects.EVENT_ACTION.applePayButtonDisplayed);

var sendApplePayButtonClickedAnalytics = exports.sendApplePayButtonClickedAnalytics = (0, _actionCreation.createActionWithAnalytics)('Send Apple Pay button clicked analytics', [], _dataObjects.EVENT_ACTION.applePayButtonClicked);