'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.initApp = exports.searchProducts = exports.getSearchSuggestions = exports.register = undefined;

var _actions = require('../../analytics/actions');

var connector = {}; /* * *  *  * *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */
/* Copyright (c) 2018 Mobify Research & Development Inc. All rights reserved. */
/* * *  *  * *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */
var register = exports.register = function register(commands) {
    connector = commands;
};

/**
 * Suggests products as the user types their search query
 * @function
 * @param {String} args Query string of what the user is typing
 */
var getSearchSuggestions = exports.getSearchSuggestions = function getSearchSuggestions() {
    var _connector;

    return (_connector = connector).getSearchSuggestions.apply(_connector, arguments);
};

/**
 * Submits a search for products
 * @function
 * @param {String} searchQuery The search term submitted by the user
 */
var searchProducts = exports.searchProducts = function searchProducts(searchQuery) {
    return connector.searchProducts(searchQuery);
};

/**
 * Initializes the connector during app startup. This command dispatched
 * be called before any other integration manager commands are.
 * @function
 */
var initApp = exports.initApp = function initApp() {
    return function (dispatch) {
        return dispatch(connector.initApp()).then(function () {
            var isPWA = typeof window !== 'undefined';
            if (isPWA) {
                window.addEventListener('beforeinstallprompt', function (e) {
                    dispatch((0, _actions.sendA2HSPromptAnalytics)());
                    e.userChoice.then(function (choiceResult) {
                        if (choiceResult.outcome === 'dismissed') {
                            dispatch((0, _actions.sendDismissA2HSAnalytics)());
                        } else {
                            dispatch((0, _actions.sendAddA2HSAnalytics)());
                        }
                    });
                });
            }
        });
    };
};