/* * *  *  * *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */
/* Copyright (c) 2018 Mobify Research & Development Inc. All rights reserved. */
/* * *  *  * *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */

export const makeRequest = (url, options) => {
    return fetch(url, {...options, credentials: 'same-origin'})
}

/**
 * Form encodes nested URL query parameters using recursion
 * Adapted from http://stackoverflow.com/questions/1714786/querystring-encoding-of-a-javascript-object
*/
export const formEncode = (obj, prefix) => {
    return Object.keys(obj)
        .map((key) => {
            const name = prefix ? `${prefix}[${key}]` : key
            const value = obj[key]
            if (value !== null && typeof value === 'object') {
                return formEncode(value, name)
            }
            return `${window.encodeURIComponent(name)}=${window.encodeURIComponent(value)}`
        })
        .join('&')
}

/**
 * Make a request given the provided url and options, form-encoding the data
 * into the body of the request.
 */
export const makeFormEncodedRequest = (url, data, options) => {
    return makeRequest(url, {
        ...options,
        body: formEncode(data),
        headers: {
            ...(options.headers || {}),
            'Content-Type': 'application/x-www-form-urlencoded'
        }
    })
}

export const makeJsonEncodedRequest = (url, data, options) => {
    return makeRequest(url, {
        ...options,
        body: JSON.stringify(data),
        headers: {
            ...(options.headers || {}),
            'Content-Type': 'application/json'
        }
    })
}
