/* * *  *  * *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */
/* Copyright (c) 2018 Mobify Research & Development Inc. All rights reserved. */
/* * *  *  * *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */

import React from 'react'
import PropTypes from 'prop-types'
import classNames from 'classnames'
import Link from '../link'
import {onKeyUpWrapper} from '../../a11y-utils'

const ListTilePrimary = ({
    children,
    href,
    onClick
}) => {
    const listTileProps = {
        className: 'pw-list-tile__primary'
    }
    if (onClick) {
        listTileProps.onClick = onClick
    }
    if (href) {
        return (
            <Link href={href} {...listTileProps}>
                {children}
            </Link>
        )
    } else {
        // Disabling the jsx-a11y/no-static-element-interactions rule because
        // there are some cases where we want the this container to behave as a
        // button, but it also contains a button. Nesting buttons inside buttons
        // in not valid markup.
        //
        // @url: https://developer.mozilla.org/en/docs/Web/HTML/Element/button
        /* eslint-disable jsx-a11y/no-static-element-interactions */
        return (
            <div
                role="button"
                tabIndex="0"
                onKeyUp={onKeyUpWrapper(onClick)}
                {...listTileProps}
            >
                {children}
            </div>
        )
        /* eslint-enable jsx-a11y/no-static-element-interactions */
    }
}

ListTilePrimary.propTypes = {
    /**
     * PROVIDED INTERNALLY: the contents of the primary part of the ListTile
     */
    children: PropTypes.node,

    /**
     * PROVIDED INTERNALLY: The URL to link to from the primary part
     */
    href: PropTypes.string,

    /**
     * PROVIDED INTERNALLY: A callback for when the primary part is clicked.
     */
    onClick: PropTypes.func,
}

/**
 * The `ListTile` component is a container to display text or/and links.
 * ListTile can have actions that can be displayed before or/and after the text.
 * Commonly used in the `List` component
 *
 * @example ./DESIGN.md
 */

class ListTile extends React.PureComponent {
    render() {
        const {
            className,
            startAction,
            endAction,
            children,
            href,
            includeEndActionInPrimary,
            onClick
        } = this.props

        const classes = classNames('pw-list-tile', {
            'pw--is-anchor': !!href
        }, className)

        return (
            <div className={classes}>
                <ListTilePrimary href={href} onClick={onClick}>
                    {startAction &&
                        <div className="pw-list-tile__action">
                            {startAction}
                        </div>
                    }

                    <div className="pw-list-tile__content">
                        {children}
                    </div>

                    {includeEndActionInPrimary && endAction &&
                        <div className="pw-list-tile__action">
                            {endAction}
                        </div>
                    }
                </ListTilePrimary>


                {!includeEndActionInPrimary && endAction &&
                    <div className="pw-list-tile__action">
                        {endAction}
                    </div>
                }
            </div>
        )
    }
}


ListTile.defaultProps = {
    includeEndActionInPrimary: true
}


ListTile.propTypes = {
    /**
     * The content that should be rendered within the ListTile primary
     * section, excluding the action.
     */
    children: PropTypes.node,

    /**
     * Adds values to the `class` attribute of the root element
     */
    className: PropTypes.string,

    /**
     * The content that appears at the end of the list tile.
     * Can be a supplementary action
     */
    endAction: PropTypes.node,

    /**
     * If provided, the primary part of the ListTile will be rendered
     * as a Link to this URL.
     */
    href: PropTypes.string,

    /**
    * Indicates if the endAction should be included inside the primary part.
    * If true, clicking endAction will perform the same action as the primary content
    */
    includeEndActionInPrimary: PropTypes.bool,

    /**
     * The content that appears at the start of the list tile. Generally supplementary icon or text
     */
    startAction: PropTypes.node,

    /**
     * Callback for when the primary is clicked. Not called if an href is passed.
     */
    onClick: PropTypes.func
}

export default ListTile
