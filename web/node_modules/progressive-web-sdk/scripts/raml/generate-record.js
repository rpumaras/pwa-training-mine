/* * *  *  * *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */
/* Copyright (c) 2018 Mobify Research & Development Inc. All rights reserved. */
/* * *  *  * *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */

const common = require('../common')
const _ = require('lodash')

const header = () => 'import Immutable from \'immutable\'\nimport PropTypes from \'prop-types\''
const divider = () => ''

const importLine = ({type, importVars}) =>
      `import ${importVars} from './${common.pascal2Dashed(type)}'`
const imports = ({contents}) => (
    _.chain(contents)
        .filter(({custom}) => custom)
        .map(importLine)
        .uniq()
        .join('\n')
)

const member = ({name, defaultValue}) => `    ${name}: ${defaultValue}`
const members = (contents) => contents.map(member).join(',\n')
const definition = ({name, contents}) => `const ${name} = Immutable.Record({\n${members(contents)}\n})`

const propTypeItem = ({name, propType}) => `    ${name}: ${propType}`
const propTypeList = (contents) => contents.map(propTypeItem).join(',\n')
const propType = ({name, contents}) => `export const ${name}PropType = PropTypes.shape({\n${propTypeList(contents)}\n})`

const footer = ({name}) => `export default ${name}\n`

const elements = [header, imports, divider, definition, divider, propType, divider, footer]

const fileText = (record) => elements.map((fn) => fn(record)).join('\n')
const filename = ({name}) => `${common.pascal2Dashed(name)}.js`

const generateRecordFile = (record) => ({
    filename: filename(record),
    text: fileText(record)
})

module.exports = generateRecordFile
